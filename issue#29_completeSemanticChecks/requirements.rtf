{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;\red222\green222\blue222;\red0\green0\blue0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{check\}}{\leveltext\leveltemplateid1\'01\uc0\u10003 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid101\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{check\}}{\leveltext\leveltemplateid201\'01\uc0\u10003 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid301\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\})}{\leveltext\leveltemplateid401\'02\'00);}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid5}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}}
\paperw11900\paperh16840\margl1440\margr1440\vieww25100\viewh13320\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 last update: 18 / 06 / 2015\

\b\fs28 \ul \
\
\pard\pardeftab720\sl320
\cf0 \ulc0 Requirements #29 complete semantics:\

\b0\fs24 \expnd0\expndtw0\kerning0
\ulnone \
Raw requirements:\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u10003 
\f0 	}\expnd0\expndtw0\kerning0
All semantics check under assert( )\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320
\ls2\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
add body and bodyReference to semantics\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u10003 
\f0 	}\expnd0\expndtw0\kerning0
add coordinatesFrame even if it is assumed (ex: Rotation)\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u10003 
\f0 	}\expnd0\expndtw0\kerning0
compile semantics only if NDEBUG is not defined\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320
\ls4\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
define linear and rotation velocities\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
define Twist constructor from rot and linear velocities\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
define SpatialMotionVector as class derived from class Twist\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
same for SpatialForceVector and Wrench\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
use Eigen as much as possible (vectors, matrices)\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
define rotation more generic (axel, angular speed), then rotation matrix as a derived class\
\pard\pardeftab720\sl320
\cf0 \
\

\b\fs28 \ul Compiling semantics check only in specific build use cases :\

\b0\fs24 \ulnone \
semantics build options (flag values / use cases):\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	1)	}\expnd0\expndtw0\kerning0
don\'92t build no semantic check\
\ls5\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2)	}\expnd0\expndtw0\kerning0
build semantic checks for bindings\
\ls5\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3)	}\expnd0\expndtw0\kerning0
build semantic checks for C++\
\pard\pardeftab720\sl320
\cf0 \
For this purpose, we define a macro 
\i iDynTreeAssert
\i0  depending on the 3 use cases listed above.\
\

\b 1) Absolutely no semantic checks code is build.\
\pard\pardeftab720\sl320

\i\b0 \cf0 \expnd0\expndtw0\kerning0
iDynTreeAssert
\i0 \expnd0\expndtw0\kerning0
 returns nothing.\
\
\pard\pardeftab720\sl320

\b \cf0 2) semantic errors shall trigger printf messages and eventually throw an exception while the program keeps running. The program is not aborted.\

\b0  returns a specific function which throws exceptions but doesn\'92t abort the program. Additionally, this behaviour could be muted upon the setting of a static variable setting from the bonded scripts.\
\

\b 3) \expnd0\expndtw0\kerning0
semantic errors shall trigger printf messages and program is aborted.\
\pard\pardeftab720\sl320

\i\b0 \cf0 \expnd0\expndtw0\kerning0
iDynTreeAssert
\i0 \expnd0\expndtw0\kerning0
 returns the standard function 
\i \expnd0\expndtw0\kerning0
assert
\i0 \expnd0\expndtw0\kerning0
 which aborts the program if the encapsulated test returns FALSE.\
\
\pard\pardeftab720\sl320

\b \cf0 User compile flag, propagated preprocessing condition and Release/Debug use cases:\
\pard\pardeftab720\sl320

\b0 \cf0 \expnd0\expndtw0\kerning0
\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat2 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx2160
\clvertalc \clcbpat2 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx4320
\clvertalc \clcbpat2 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx6480
\clvertalc \clcbpat2 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
Build type\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
semantics cmake flag\
IDYNTREE_USES_SEMANTICS\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
Bindings cmake flag\
\pard\intbl\itap1\pardeftab720\sl320
\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 IDYNTREE_COMPILE_BINDINGS\expnd0\expndtw0\kerning0
\CocoaLigature1 \cell 
\pard\intbl\itap1\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
Use case / returned function\expnd0\expndtw0\kerning0
\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat2 \clheight343 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx2160
\clvertalc \clcbpat2 \clheight343 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx4320
\clvertalc \clcbpat2 \clheight343 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx6480
\clvertalc \clcbpat2 \clheight343 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
Release\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl320\qc
\cf0 \expnd0\expndtw0\kerning0
-\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl320\qc
\cf0 \expnd0\expndtw0\kerning0
-\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
1 (no semantics checks despite the cmake flags)\expnd0\expndtw0\kerning0
\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat2 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx2160
\clvertalc \clcbpat2 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx4320
\clvertalc \clcbpat2 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx6480
\clvertalc \clcbpat2 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
Debug\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl320\qc
\cf0 FALSE\cell 
\pard\intbl\itap1\pardeftab720\sl320\qc
\cf0 \expnd0\expndtw0\kerning0
-\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
1 (no semantics checks)\expnd0\expndtw0\kerning0
\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat2 \clheight325 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx2160
\clvertalc \clcbpat2 \clheight325 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx4320
\clvertalc \clcbpat2 \clheight325 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx6480
\clvertalc \clcbpat2 \clheight325 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
Debug\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl320\qc
\cf0 TRUE\cell 
\pard\intbl\itap1\pardeftab720\sl320\qc
\cf0 FALSE\cell 
\pard\intbl\itap1\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
3 (
\i \expnd0\expndtw0\kerning0
assert
\i0 \expnd0\expndtw0\kerning0
 function for C++ build)\expnd0\expndtw0\kerning0
\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat2 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx2160
\clvertalc \clcbpat2 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx4320
\clvertalc \clcbpat2 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx6480
\clvertalc \clcbpat2 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadl100 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
Debug\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl320\qc
\cf0 TRUE\cell 
\pard\intbl\itap1\pardeftab720\sl320\qc
\cf0 TRUE\cell 
\pard\intbl\itap1\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
2 (
\i \expnd0\expndtw0\kerning0
checkSemOutput()
\i0 \expnd0\expndtw0\kerning0
 )\expnd0\expndtw0\kerning0
\cell \lastrow\row
\pard\pardeftab720\sl320

\b \cf0 table 1:
\b0  
\i \expnd0\expndtw0\kerning0
iDynTreeAssert
\i0 \expnd0\expndtw0\kerning0
 defined from cake options.\
\
\

\b\fs28 \ul Derived compile flags:\

\b0\fs24 \ulnone \

\b New:
\b0 \
\pard\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
CODYCO_USES_SEMANTICS		:	semantics activation in cmake. Part of codyco-superbuild cmake options.\expnd0\expndtw0\kerning0
\
\expnd0\expndtw0\kerning0
IDYNTREE_USES_SEMANTICS		:	semantics activation at iDynTree level. Default value set by codyco-superbuild make options but can be individually tuned in iDynTree component.\
\

\b Existing:
\b0 \
CMAKE_BUILD_TYPE			:	build type. The list of supported types is in CMAKE_CONFIGURATION_TYPES.\
\
\

\b\fs28 \ul Requirements:
\b0\fs24 \ulnone \
\

\b cmake options\'85
\b0 \
Create CODYCO_USES_SEMANTICS in codyco-superbuild cmake options\
Propagate CODYCO_USES_SEMANTICS value to IDYNTREE_USES_SEMANTICS\
Propagate IDYNTREE_USES_SEMANTICS to code headers\
\

\b iDynTree code\'85
\b0 \
Define 
\i \expnd0\expndtw0\kerning0
iDynTreeAssert
\i0 \expnd0\expndtw0\kerning0
 from IDYNTREE_USES_SEMANTICS and \kerning1\expnd0\expndtw0 \CocoaLigature0 IDYNTREE_COMPILE_BINDINGS\expnd0\expndtw0\kerning0
\CocoaLigature1  compile flags, as specified in table 1 above.\
\
}